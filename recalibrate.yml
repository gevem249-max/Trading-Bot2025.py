import os, json
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials
import datetime as dt

# ======================
# Configuración
# ======================
SPREADSHEET_ID = os.getenv("SPREADSHEET_ID")
GS_JSON = json.loads(os.getenv("GOOGLE_SHEETS_JSON"))
CREDS = Credentials.from_service_account_info(GS_JSON, scopes=["https://www.googleapis.com/auth/spreadsheets"])
GC = gspread.authorize(CREDS)
SHEET = GC.open_by_key(SPREADSHEET_ID).sheet1

# ======================
# Recalibración básica
# ======================
def recalibrate():
    vals = SHEET.get_all_records()
    if not vals:
        print("⚠️ No hay datos para recalibrar.")
        return

    df = pd.DataFrame(vals)

    # Filtramos señales con resultado
    df = df[df["Resultado"].isin(["Win","Loss"])]

    if df.empty:
        print("⚠️ No hay suficientes resultados para recalibrar.")
        return

    # Métricas
    total = len(df)
    wins = (df["Resultado"] == "Win").sum()
    losses = (df["Resultado"] == "Loss").sum()
    winrate = round((wins / total) * 100, 2)

    # Porcentaje medio de probFinal en los ganadores vs perdedores
    avg_win_prob = df[df["Resultado"]=="Win"]["ProbFinal"].mean()
    avg_loss_prob = df[df["Resultado"]=="Loss"]["ProbFinal"].mean()

    print(f"✅ Recalibración completada {dt.datetime.now()}")
    print(f"Total trades: {total}, Wins: {wins}, Losses: {losses}, Winrate: {winrate}%")
    print(f"Prob medio WIN: {avg_win_prob:.1f}, Prob medio LOSS: {avg_loss_prob:.1f}")

    # Guardamos un ajuste (ej: umbral dinámico)
    new_threshold = max(70, min(90, int(avg_win_prob)))  # mueve el umbral entre 70–90 según resultados
    print(f"Nuevo umbral recomendado: {new_threshold}%")

    # Guardar ajuste en otra hoja (o en archivo JSON dentro del repo)
    try:
        try:
            sheet2 = GC.open_by_key(SPREADSHEET_ID).worksheet("calibration")
        except gspread.WorksheetNotFound:
            sheet2 = GC.open_by_key(SPREADSHEET_ID).add_worksheet("calibration", rows=100, cols=3)

        sheet2.update("A1:C1", [["Fecha","Winrate","Nuevo_Threshold"]])
        sheet2.append_row([dt.datetime.now().isoformat(), winrate, new_threshold])
    except Exception as e:
        print("⚠️ No se pudo guardar en Google Sheets:", e)


if __name__ == "__main__":
    recalibrate()
