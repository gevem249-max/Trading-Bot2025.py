name: Run Trading Bot (Adaptive Mode - 24/7)

on:
  schedule:
    # Horarios adaptativos seg√∫n sesi√≥n:
    # - Cada 5 min de 00:00 a 13:00 ET ‚Üí Globex (premercado y nocturno)
    - cron: "*/5 0-13 * * *"
    # - Cada 5 min de 13:00 a 21:00 ET ‚Üí NYSE (mercado regular)
    - cron: "*/5 13-21 * * *"
    # - Cada 60 min de 21:00 a 23:59 ET ‚Üí off-market (mantenimiento)
    - cron: "0 21-23 * * *"
  workflow_dispatch:
    inputs:
      reason:
        description: "Manual run reason"
        required: false
        default: "Ejecuci√≥n manual"

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: "Trading Bot 2025 Execution"

    steps:
      # ==============================
      # 1Ô∏è‚É£ INICIO Y PREPARACI√ìN
      # ==============================
      - name: üöÄ Iniciando Trading Bot
        run: |
          echo "---------------------------------------------"
          echo "üöÄ Trading Bot 2025 ‚Äî Adaptive Continuous Mode"
          echo "üïí $(date)"
          echo "---------------------------------------------"

      - name: üì• Checkout repositorio
        uses: actions/checkout@v4

      # ==============================
      # 2Ô∏è‚É£ CONFIGURACI√ìN PYTHON
      # ==============================
      - name: üêç Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          echo "‚úÖ Dependencias instaladas correctamente."

      # ==============================
      # 3Ô∏è‚É£ VALIDAR VARIABLES (SECRETOS)
      # ==============================
      - name: üß© Verificar secrets
        run: |
          echo "GOOGLE_CREDS_JSON cargado: ${{ secrets.GOOGLE_CREDS_JSON != '' }}"
          echo "SPREADSHEET_ID cargado: ${{ secrets.SPREADSHEET_ID != '' }}"
          echo "ALERT_DEFAULT cargado: ${{ secrets.ALERT_DEFAULT != '' }}"
          echo "‚úÖ Variables ambientales verificadas."

      # ==============================
      # 4Ô∏è‚É£ EJECUCI√ìN DEL BOT
      # ==============================
      - name: ‚ñ∂Ô∏è Ejecutar bot.py
        env:
          GOOGLE_CREDS_JSON: ${{ secrets.GOOGLE_CREDS_JSON }}
          GOOGLE_CREDS: ${{ secrets.GOOGLE_CREDS }}
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
          ALERT_DEFAULT: ${{ secrets.ALERT_DEFAULT }}
          ALERT_ES: ${{ secrets.ALERT_ES }}
          ALERT_DKNG: ${{ secrets.ALERT_DKNG }}
          ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
        run: |
          echo "üèÅ Iniciando an√°lisis de mercado..."
          python bot.py || echo "‚ö†Ô∏è Error detectado durante la ejecuci√≥n."

      # ==============================
      # 5Ô∏è‚É£ REINTENTO Y LIMPIEZA
      # ==============================
      - name: üîÅ Auto-retry si falla
        if: failure()
        run: |
          echo "‚ö†Ô∏è El bot present√≥ un error, se reintentar√° en la pr√≥xima ejecuci√≥n."
          echo "‚åõ Guardando logs para depuraci√≥n."

      - name: üßπ Limpieza de cach√© y temporales
        run: |
          rm -rf __pycache__
          rm -rf .pytest_cache
          echo "üßΩ Limpieza completada correctamente."
