name: Run Trading Bot (Continuous Mode)

on:
  schedule:
    # Ejecuta cada hora (a los minutos 00)
    - cron: "0 * * * *"
  workflow_dispatch: # permite ejecuci√≥n manual
    inputs:
      reason:
        description: "Motivo del run manual"
        required: false
        default: "Ejecuci√≥n manual"

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: üöÄ Iniciando Trading Bot...
        run: echo "üöÄ Iniciando Trading Bot (Continuous Mode)..."

      # Clona el repositorio
      - name: üì• Checkout repo
        uses: actions/checkout@v4

      # Configura Python
      - name: üêç Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Instala dependencias
      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          echo "‚úÖ Dependencias instaladas."

      # Test de variables para debugging (no muestra valores)
      - name: üß© Check environment variables
        run: |
          echo "GOOGLE_CREDS_JSON set: ${{ secrets.GOOGLE_CREDS_JSON != '' }}"
          echo "GOOGLE_CREDS set: ${{ secrets.GOOGLE_CREDS != '' }}"
          echo "SPREADSHEET_ID set: ${{ secrets.SPREADSHEET_ID != '' }}"
          echo "ALPHA_VANTAGE_KEY set: ${{ secrets.ALPHA_VANTAGE_KEY != '' }}"
          echo "‚úÖ Variables verificadas."

      # Ejecuta el bot
      - name: ‚ñ∂Ô∏è Run bot.py
        env:
          GOOGLE_CREDS_JSON: ${{ secrets.GOOGLE_CREDS_JSON }}
          GOOGLE_CREDS: ${{ secrets.GOOGLE_CREDS }}
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
          ALERT_DEFAULT: ${{ secrets.ALERT_DEFAULT }}
          ALERT_ES: ${{ secrets.ALERT_ES }}
          ALERT_DKNG: ${{ secrets.ALERT_DKNG }}
          ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
        run: |
          echo "üèÅ Ejecutando bot.py"
          python bot.py || echo "‚ö†Ô∏è Error detectado durante la ejecuci√≥n."

      # Si el bot falla, registra el error y programa reintento
      - name: üîÅ Auto-retry if failed
        if: failure()
        run: |
          echo "‚ö†Ô∏è El bot fall√≥. Se reintentar√° en la pr√≥xima ejecuci√≥n."
          echo "‚åõ Manteniendo logs limpios para pr√≥xima iteraci√≥n."

      # Limpieza de cach√© (evita saturaci√≥n)
      - name: üßπ Clean up
        run: |
          rm -rf __pycache__
          echo "üßΩ Limpieza finalizada."
